[{"model": "admin.logentry", "pk": 1, "fields": {"action_time": "2023-01-25T18:01:10.326Z", "user": 1, "content_type": 6, "object_id": "1", "object_repr": "Backend", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 2, "fields": {"action_time": "2023-01-25T18:01:24.221Z", "user": 1, "content_type": 6, "object_id": "2", "object_repr": "Frontend", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 3, "fields": {"action_time": "2023-01-25T18:01:32.497Z", "user": 1, "content_type": 6, "object_id": "3", "object_repr": "DevOps", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 4, "fields": {"action_time": "2023-01-25T18:01:45.800Z", "user": 1, "content_type": 6, "object_id": "4", "object_repr": "Cloud Computing", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 5, "fields": {"action_time": "2023-01-25T18:02:37.724Z", "user": 1, "content_type": 6, "object_id": "5", "object_repr": "Django", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 6, "fields": {"action_time": "2023-01-25T18:03:01.188Z", "user": 1, "content_type": 6, "object_id": "6", "object_repr": "Beginner", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 7, "fields": {"action_time": "2023-01-25T18:03:29.660Z", "user": 1, "content_type": 6, "object_id": "7", "object_repr": "Serverless", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 8, "fields": {"action_time": "2023-01-25T18:03:46.838Z", "user": 1, "content_type": 6, "object_id": "8", "object_repr": "Javascript", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 9, "fields": {"action_time": "2023-01-25T18:03:54.880Z", "user": 1, "content_type": 6, "object_id": "9", "object_repr": "Python", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 10, "fields": {"action_time": "2023-01-25T18:04:19.321Z", "user": 1, "content_type": 6, "object_id": "10", "object_repr": "Production", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 11, "fields": {"action_time": "2023-01-25T18:06:00.822Z", "user": 1, "content_type": 7, "object_id": "1", "object_repr": "Starting a Django project - jsmith", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 12, "fields": {"action_time": "2023-01-25T18:07:50.647Z", "user": 1, "content_type": 6, "object_id": "11", "object_repr": "Ruby on Rails", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 13, "fields": {"action_time": "2023-01-25T18:07:59.682Z", "user": 1, "content_type": 6, "object_id": "12", "object_repr": "Ruby", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 14, "fields": {"action_time": "2023-01-25T18:09:36.915Z", "user": 1, "content_type": 7, "object_id": "2", "object_repr": "Starting a Ruby on Rails app - jsmith", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 15, "fields": {"action_time": "2023-01-25T18:12:10.642Z", "user": 1, "content_type": 6, "object_id": "13", "object_repr": "Containerization", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 16, "fields": {"action_time": "2023-01-25T18:12:20.144Z", "user": 1, "content_type": 6, "object_id": "14", "object_repr": "Docker", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 17, "fields": {"action_time": "2023-01-25T18:12:25.278Z", "user": 1, "content_type": 7, "object_id": "3", "object_repr": "Docker Docker Docker - jsmith", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 18, "fields": {"action_time": "2023-01-25T18:12:53.740Z", "user": 1, "content_type": 6, "object_id": "15", "object_repr": "AWS", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 19, "fields": {"action_time": "2023-01-25T18:14:36.333Z", "user": 1, "content_type": 7, "object_id": "4", "object_repr": "Getting certified - AWS Certified Cloud Practitioner - jsmith", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "auth.permission", "pk": 1, "fields": {"name": "Can add log entry", "content_type": 1, "codename": "add_logentry"}}, {"model": "auth.permission", "pk": 2, "fields": {"name": "Can change log entry", "content_type": 1, "codename": "change_logentry"}}, {"model": "auth.permission", "pk": 3, "fields": {"name": "Can delete log entry", "content_type": 1, "codename": "delete_logentry"}}, {"model": "auth.permission", "pk": 4, "fields": {"name": "Can view log entry", "content_type": 1, "codename": "view_logentry"}}, {"model": "auth.permission", "pk": 5, "fields": {"name": "Can add permission", "content_type": 2, "codename": "add_permission"}}, {"model": "auth.permission", "pk": 6, "fields": {"name": "Can change permission", "content_type": 2, "codename": "change_permission"}}, {"model": "auth.permission", "pk": 7, "fields": {"name": "Can delete permission", "content_type": 2, "codename": "delete_permission"}}, {"model": "auth.permission", "pk": 8, "fields": {"name": "Can view permission", "content_type": 2, "codename": "view_permission"}}, {"model": "auth.permission", "pk": 9, "fields": {"name": "Can add group", "content_type": 3, "codename": "add_group"}}, {"model": "auth.permission", "pk": 10, "fields": {"name": "Can change group", "content_type": 3, "codename": "change_group"}}, {"model": "auth.permission", "pk": 11, "fields": {"name": "Can delete group", "content_type": 3, "codename": "delete_group"}}, {"model": "auth.permission", "pk": 12, "fields": {"name": "Can view group", "content_type": 3, "codename": "view_group"}}, {"model": "auth.permission", "pk": 13, "fields": {"name": "Can add content type", "content_type": 4, "codename": "add_contenttype"}}, {"model": "auth.permission", "pk": 14, "fields": {"name": "Can change content type", "content_type": 4, "codename": "change_contenttype"}}, {"model": "auth.permission", "pk": 15, "fields": {"name": "Can delete content type", "content_type": 4, "codename": "delete_contenttype"}}, {"model": "auth.permission", "pk": 16, "fields": {"name": "Can view content type", "content_type": 4, "codename": "view_contenttype"}}, {"model": "auth.permission", "pk": 17, "fields": {"name": "Can add session", "content_type": 5, "codename": "add_session"}}, {"model": "auth.permission", "pk": 18, "fields": {"name": "Can change session", "content_type": 5, "codename": "change_session"}}, {"model": "auth.permission", "pk": 19, "fields": {"name": "Can delete session", "content_type": 5, "codename": "delete_session"}}, {"model": "auth.permission", "pk": 20, "fields": {"name": "Can view session", "content_type": 5, "codename": "view_session"}}, {"model": "auth.permission", "pk": 21, "fields": {"name": "Can add post category", "content_type": 6, "codename": "add_postcategory"}}, {"model": "auth.permission", "pk": 22, "fields": {"name": "Can change post category", "content_type": 6, "codename": "change_postcategory"}}, {"model": "auth.permission", "pk": 23, "fields": {"name": "Can delete post category", "content_type": 6, "codename": "delete_postcategory"}}, {"model": "auth.permission", "pk": 24, "fields": {"name": "Can view post category", "content_type": 6, "codename": "view_postcategory"}}, {"model": "auth.permission", "pk": 25, "fields": {"name": "Can add post", "content_type": 7, "codename": "add_post"}}, {"model": "auth.permission", "pk": 26, "fields": {"name": "Can change post", "content_type": 7, "codename": "change_post"}}, {"model": "auth.permission", "pk": 27, "fields": {"name": "Can delete post", "content_type": 7, "codename": "delete_post"}}, {"model": "auth.permission", "pk": 28, "fields": {"name": "Can view post", "content_type": 7, "codename": "view_post"}}, {"model": "auth.permission", "pk": 29, "fields": {"name": "Can add user", "content_type": 8, "codename": "add_customuser"}}, {"model": "auth.permission", "pk": 30, "fields": {"name": "Can change user", "content_type": 8, "codename": "change_customuser"}}, {"model": "auth.permission", "pk": 31, "fields": {"name": "Can delete user", "content_type": 8, "codename": "delete_customuser"}}, {"model": "auth.permission", "pk": 32, "fields": {"name": "Can view user", "content_type": 8, "codename": "view_customuser"}}, {"model": "contenttypes.contenttype", "pk": 1, "fields": {"app_label": "admin", "model": "logentry"}}, {"model": "contenttypes.contenttype", "pk": 2, "fields": {"app_label": "auth", "model": "permission"}}, {"model": "contenttypes.contenttype", "pk": 3, "fields": {"app_label": "auth", "model": "group"}}, {"model": "contenttypes.contenttype", "pk": 4, "fields": {"app_label": "contenttypes", "model": "contenttype"}}, {"model": "contenttypes.contenttype", "pk": 5, "fields": {"app_label": "sessions", "model": "session"}}, {"model": "contenttypes.contenttype", "pk": 6, "fields": {"app_label": "blog", "model": "postcategory"}}, {"model": "contenttypes.contenttype", "pk": 7, "fields": {"app_label": "blog", "model": "post"}}, {"model": "contenttypes.contenttype", "pk": 8, "fields": {"app_label": "accounts", "model": "customuser"}}, {"model": "sessions.session", "pk": "ylrzq8583552n0ictghedmgk1u7w6b12", "fields": {"session_data": ".eJxVjMsOwiAQRf-FtSHAVB4u3fsNZBgGqRqalHZl_HdD0oVu7znnvkXEfatx77zGOYuL0OL0uyWkJ7cB8gPbfZG0tG2dkxyKPGiXtyXz63q4fwcVex21ZVI4QXApANpgHOKk_DllZ3QuRB7Ia0AKBayGYlgll5gdEzmjgvh8Ae8aOGE:1pKkER:dloRyszxzSp0x6vo5-CZEaAwdAENR5a9PRIluWFl7po", "expire_date": "2023-02-08T18:10:47.745Z"}}, {"model": "blog.postcategory", "pk": 1, "fields": {"name": "Backend", "slug": "backend"}}, {"model": "blog.postcategory", "pk": 2, "fields": {"name": "Frontend", "slug": "frontend"}}, {"model": "blog.postcategory", "pk": 3, "fields": {"name": "DevOps", "slug": "devops"}}, {"model": "blog.postcategory", "pk": 4, "fields": {"name": "Cloud Computing", "slug": "cloud-computing"}}, {"model": "blog.postcategory", "pk": 5, "fields": {"name": "Django", "slug": "django"}}, {"model": "blog.postcategory", "pk": 6, "fields": {"name": "Beginner", "slug": "beginner"}}, {"model": "blog.postcategory", "pk": 7, "fields": {"name": "Serverless", "slug": "serverless"}}, {"model": "blog.postcategory", "pk": 8, "fields": {"name": "Javascript", "slug": "javascript"}}, {"model": "blog.postcategory", "pk": 9, "fields": {"name": "Python", "slug": "python"}}, {"model": "blog.postcategory", "pk": 10, "fields": {"name": "Production", "slug": "production"}}, {"model": "blog.postcategory", "pk": 11, "fields": {"name": "Ruby on Rails", "slug": "ruby-on-rails"}}, {"model": "blog.postcategory", "pk": 12, "fields": {"name": "Ruby", "slug": "ruby"}}, {"model": "blog.postcategory", "pk": 13, "fields": {"name": "Containerization", "slug": "containerization"}}, {"model": "blog.postcategory", "pk": 14, "fields": {"name": "Docker", "slug": "docker"}}, {"model": "blog.postcategory", "pk": 15, "fields": {"name": "AWS", "slug": "aws"}}, {"model": "blog.post", "pk": 1, "fields": {"author": 1, "title": "Starting a Django project", "slug": "starting-a-django-project", "intro": "Properly setting up a Django project.", "body": "## Install Python\r\n\r\nThe version we are going to use is `3.11`.  \r\nI am on a Mac so I will use homebrew to install Python:\r\n\r\n```sh\r\n❯ brew install python@3.10\r\n```\r\n\r\nLet's check that Python version we want to use is installed:\r\n\r\n```sh\r\n❯ python3.11 --version\r\nPython 3.11.0\r\n\r\n❯ python3.11\r\nPython 3.11.0 (main, Oct 26 2022, 19:06:18) [Clang 14.0.0 (clang-1400.0.29.202)] on darwin\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>>\r\n```\r\n\r\n\r\n## Create the folder for the project\r\n\r\nI usually put my coding projects inside a folder located at `~/Sites`.  \r\n\r\nLet's create the **test_project** folder and cd into it:\r\n\r\n```sh\r\n~/Sites\r\n❯ mkdir test_project\r\n\r\n~/Sites\r\n❯ cd test_project\r\n\r\n~/Sites/test_project\r\n❯ pwd\r\n/Users/cloudcruder/Sites/test_project\r\n```\r\n\r\n\r\n## Creating the virtual environment\r\n\r\nFirst of all, verify that you are into the correct folder, make sure that you are into the **test_project** folder.\r\n\r\n```sh\r\n❯ python3.11 -m venv .venv\r\n```\r\n\r\nHere you are telling python to create a virtual environment using Python version 3.10 in a folder called **.venv**.\r\n\r\nThen activate that environment:\r\n\r\n```sh\r\n❯ source .venv/bin/activate\r\n```\r\n\r\nTo check that the project is using the python version of your virtual environment:\r\n\r\n```sh\r\n❯ which python\r\n/Users/cloudcruder/Sites/test_project/.venv/bin/python\r\n```\r\n\r\n\r\n## Installing packages\r\n\r\nCheck that the package manager does not require an update:\r\n\r\n```sh\r\n❯ pip install --upgrade pip\r\n```\r\n\r\n\r\n### Install Django\r\n\r\n```sh\r\n❯ pip install django\r\n```\r\n\r\nVerify that Django is properly installed:\r\n\r\n```sh\r\n❯ python -m django --version\r\n4.1.4\r\n```\r\n\r\n```sh\r\n❯ pip freeze > requirements.txt\r\n```\r\n\r\nThis file will come in handy when reinstalling your project.\r\n\r\n\r\n### Create Django project\r\n\r\n```sh\r\n❯ django-admin startproject test_project\r\n```\r\n\r\nNow inside of the folder **test_project** you have another folder called **test_project**:\r\n\r\n```sh\r\n~/Sites/test_project via 🐍 v3.10.8 (.venv)\r\n❯ ls -la\r\ntotal 8\r\ndrwxr-xr-x   5 cloudcruder  staff  160 Dec  7 14:58 .\r\ndrwxr-xr-x  11 cloudcruder  staff  352 Dec  7 14:30 ..\r\ndrwxr-xr-x   6 cloudcruder  staff  192 Dec  7 14:32 .venv\r\n-rw-r--r--   1 cloudcruder  staff   45 Dec  7 14:35 requirements.txt\r\ndrwxr-xr-x   4 cloudcruder  staff  128 Dec  7 14:58 test_project\r\n```\r\n\r\nAnd, if you cd into that last  **test_project** you will have another  **test_project** folder:\r\n\r\n```sh\r\n~/Sites/test_project via 🐍 v3.10.8 (.venv)\r\n❯ cd test_project\r\n\r\nSites/test_project/test_project via 🐍 v3.10.8 (.venv)\r\n❯ ls -la\r\ntotal 8\r\ndrwxr-xr-x  4 cloudcruder  staff  128 Dec  7 14:58 .\r\ndrwxr-xr-x  5 cloudcruder  staff  160 Dec  7 14:58 ..\r\n-rwxr-xr-x  1 cloudcruder  staff  668 Dec  7 14:58 manage.py\r\ndrwxr-xr-x  7 cloudcruder  staff  224 Dec  7 14:58 test_project\r\n```\r\n\r\nNot ideal. So, rename the second  **test_project** folder to **src**, you should now have:\r\n**test_project** > **src** > **test_project**\r\n\r\n\r\n### Start the server\r\n\r\nMake sure you are into the **src** directory, then:\r\n\r\n```sh\r\n~/Sites/test_project via 🐍 v3.10.8 (.venv)\r\n❯ cd src\r\n\r\nSites/test_project/src via 🐍 v3.10.8 (.venv)\r\n❯ ls -la\r\ntotal 8\r\ndrwxr-xr-x  4 cloudcruder  staff  128 Dec  7 14:58 .\r\ndrwxr-xr-x  5 cloudcruder  staff  160 Dec  7 15:04 ..\r\n-rwxr-xr-x  1 cloudcruder  staff  668 Dec  7 14:58 manage.py\r\ndrwxr-xr-x  7 cloudcruder  staff  224 Dec  7 14:58 test_project\r\n```\r\n\r\nThen run:\r\n\r\n```sh\r\n❯ python manage.py runserver\r\n```\r\n\r\n\r\n## Migrations\r\n\r\n### Show which migrations are awaiting\r\n\r\nMake sure you are into the **src** directory, then:\r\n\r\n```sh\r\n❯ python manage.py showmigrations\r\n```\r\n\r\n\r\n### Make migration\r\n\r\nIf you created a model in one of your apps, you need to tell Django to make those migrations first before you'll be able to see and run them.\r\n\r\n```sh\r\n❯ python manage.py makemigrations\r\n```\r\n\r\n### Run migrations\r\n\r\nMake sure you are into the **src** directory, then:\r\n\r\n```sh\r\n❯ python manage.py migrate\r\n```\r\n\r\n\r\n## Admin\r\n\r\n### Create super user\r\n\r\nMake sure you are into the **src** directory, then:\r\n\r\n```sh\r\n❯ python manage.py createsuperuser\r\n```\r\n\r\nFollow the prompt & provide the informations required.  \r\nNow you can go to `http://127.0.0.1:8000/admin` and login with the user you just created.\r\n\r\n\r\n## Notes\r\n\r\n⚠️ When running migration commands, make sure that the app for which the migration is for is listed in `INSTALLED_APS` in the project's settings file.", "publish": true, "created_at": "2023-01-25T18:06:00.815Z", "updated_at": "2023-01-25T18:06:00.815Z", "categories": [1, 5, 9]}}, {"model": "blog.post", "pk": 2, "fields": {"author": 1, "title": "Starting a Ruby on Rails app", "slug": "starting-a-ruby-on-rails-app", "intro": "Properly setting up a Ruby on Rails project.", "body": "## Setting up the dev environment\r\n\r\nI am working on a MacOS device but the setup should be fairly identic if you are on any Linux distro.  \r\nI assume you have [homebrew](https://brew.sh/) installed.\r\n\r\n\r\n### Install Rbenv and Ruby\r\n\r\nI use [rbenv](https://github.com/rbenv/rbenv), as my Ruby versions manager  \r\n\r\n```sh\r\n❯ brew install rbenv\r\n```\r\n\r\nDon't forget to add the line bellow in you bashrc or zshrc, I am using the latter since it is the default on Mac.\r\n\r\n```txt\r\nif which rbenv > /dev/null; then eval \"$(rbenv init -)\"; fi\r\n```\r\n\r\nAnd source the zshrc:\r\n\r\n```sh\r\n❯ source ~/.zshrc\r\n```\r\n\r\nOr just close the terminal and open a new one.\r\n\r\nInstall the ruby version you want to use, I am going to use version `3.1.2`:  \r\n\r\n```sh\r\n❯ rbenv install 3.1.2\r\n```\r\n\r\nLet's check that the version 3.1.2 is installed:\r\n\r\n```sh\r\n❯ rbenv versions\r\n* system\r\n  3.1.2\r\n```\r\n\r\nHere you listed all the ruby versions installed on your computer. The current global version is the system one, not the one you just installed. Let's change that:\r\n\r\n```sh\r\n❯ rbenv global 3.1.2\r\n```\r\n\r\nNow if you check the rbenv versions again:⚠️\r\n\r\n```sh\r\n❯ rbenv versions    \r\n  system\r\n* 3.1.2 (set by /Users/user_name/.rbenv/version)\r\n```\r\n\r\n#### Install a gem\r\n\r\nLet's install a gem to make sure the ruby version we try to use is working fine.\r\n\r\n```sh\r\n❯ gem install foreman\r\nSuccessfully installed foreman-0.87.2\r\n1 gem installed\r\n```\r\n\r\nWe will need Foreman to run the Procfile.\r\n\r\n\r\n#### Gem installations gotchas 📝\r\n\r\nIn case you have the error bellow:\r\n\r\n```sh\r\nWARNING:  You don't have /home/user_name/.gem/ruby/3.1.2/bin in your PATH,\r\n    gem executables will not run.\r\n```\r\n\r\nAdd in your `.zshrc` file:\r\n\r\n```text\r\nPATH=\"`ruby -e 'puts Gem.user_dir'`/bin:$PATH\"\r\n```\r\n\r\nSource your `.zshrc` then try again. 🙂\r\n\r\n\r\n### NVM and NodeJS\r\n\r\nInstall nvm for managing NodeJS versions.\r\n\r\n```sh\r\n❯ brew install nvm\r\n```\r\n\r\nLet's install the latest LTS version:\r\n\r\n```sh\r\n❯ nvm install --lts\r\n```\r\n\r\nOr \r\n\r\n```sh\r\n❯ nvm install 16.14.2\r\n```\r\n\r\nif you want a specific versions.\r\nInstall Yarn globally.\r\n\r\n```sh\r\n❯ npm install --global yarn\r\n```\r\n\r\n\r\n### Postgresql\r\n\r\n```sh\r\n❯ brew install postgresql\r\n```\r\n\r\nAfter the installation don't forget to run:  \r\n\r\n```sh\r\n❯ brew services restart postgresql\r\n```\r\n\r\n\r\n### Redis\r\n\r\n```sh\r\n❯ brew install redis\r\n```\r\n\r\n## Creating the Rails project\r\n\r\n\r\n<div id=\"nav\">\r\n<ul>\r\n    <li><a href=\"#testing\">Testing: Rspec</a></li>\r\n    <li><a href=\"#authentication\">Authentication: Devise</a></li>\r\n</ul>\r\n</div>\r\n\r\n\r\n### Ruby version for project is the same as global one\r\n\r\nI usually put my coding projects inside a folder located at `~/Sites`.  \r\n\r\n```sh\r\n❯ ruby --version\r\nruby 3.1.2p20 (2022-04-12 revision 4491bb740a) [arm64-darwin22]\r\n```\r\n\r\nIf the global ruby version is the one we want to use for our project:\r\n\r\nInstall the rails gem:\r\n```sh\r\n❯ gem install rails\r\n```\r\nAnd generate the rails project:\r\n```sh\r\n❯ rails new name_of_the_app --database=postgresql --skip-jbuilder --skip-test --css=tailwind --javascript=esbuild\r\n```\r\n\r\n\r\n### Ruby version for the project is different of global one\r\n\r\nIf the ruby version you want to use for your project is different from the ruby version set as the global version on you computer:\r\nFirst cd into `~/Sites`, then we create the folder for our project:\r\n\r\n```sh\r\n❯ mkdir my_app_name\r\n```\r\n\r\nThen cd into `my_app_name` folder and set the local version to the one you want, here we are using `3.1.2`:  \r\n\r\n```sh\r\n❯ rbenv local 3.1.2\r\n```\r\n\r\nThen generate the rails project:\r\n\r\n```sh\r\n❯ rails new . --database=postgresql --skip-jbuilder --skip-test --css=tailwind --javascript=esbuild\r\n```\r\n\r\n\r\n<span id=\"testing\"></span>\r\n\r\n## Testing\r\n\r\n\r\n### Rspec\r\n\r\nAdd Rspec in development and test group of the Gemfile:\r\n\r\n```sh\r\ngroup :development, :test do\r\n  gem \"rspec-rails\", \"~> 6.0.0\"\r\nend\r\n```\r\n\r\nRun\r\n\r\n```sh\r\n❯ bundle install\r\n```\r\n\r\nThen\r\n\r\n```sh\r\n❯ rails generate rspec:install\r\n❯ bundle binstubs rspec-core\r\n```\r\n\r\nThe last command allows us to use a shourtcut when running our tests, that command is:\r\n\r\n```sh\r\n❯ bin/rspec\r\nNo examples found.\r\n\r\n\r\nFinished in 0.00014 seconds (files took 0.05266 seconds to load)\r\n0 examples, 0 failures\r\n```\r\n\r\nNo tests, no issues. 😂🙈\r\n\r\n\r\n#### Test helpers\r\n\r\n\r\n##### Where to find the files\r\n\r\nUncomment the line below in `spec/rails_helper.rb`\r\n\r\n```ruby\r\nDir[Rails.root.join('spec', 'support', '**', '*.rb')].sort.each { |f| require f }\r\n```\r\n\r\nThis tells Rspec where to load the helper files it needs for our tests.\r\n\r\n\r\n##### Rspec configuration for helpers\r\n\r\nConfiguration update for other modules such as ActiveJob, ActionMailbox, Devise...etc  \r\nInside of `RSpec.configure do |config|` block in `spec/rails_helper.rb` file add:\r\n\r\n```\r\nconfig.global_fixtures = :all\r\n\r\nconfig.include ActiveJob::TestHelper\r\nconfig.include ActionMailbox::TestHelper\r\n# config.include Devise::Test::IntegrationHelpers, type: :feature\r\n# config.include Devise::Test::ControllerHelpers, type: :controller\r\n```\r\n\r\nThe `config.global_fixtures = :all` tells rails to load all the fixtures created as test data.\r\nWe leave the configurations for Devise helpers commented for now, we will update them when we add Devise into our app.\r\n\r\n\r\n##### Helpers for requests\r\n\r\nAdd a new folder called `support` in `spec`. Then create a file named `request_spec_helper.rb`.\r\nOr just run:\r\n\r\n```\r\n©mkdir -p spec/support/request_spec_helper.rb\r\n```\r\n\r\nIn `spec/support/request_spec_helper.rb` add:\r\n\r\n```ruby\r\nmodule RequestSpecHelper\r\n  include Warden::Test::Helpers\r\n\r\n  def self.included(base)\r\n    base.before(:each) { Warden.test_mode! }\r\n    base.after(:each) { Warden.test_reset! }\r\n  end\r\n\r\n  def sign_in(resource)\r\n    login_as(resource, scope: warden_scope(resource))\r\n    resource\r\n  end\r\n\r\n  def sign_out(resource)\r\n    logout(warden_scope(resource))\r\n  end\r\n\r\n  def json\r\n    JSON.parse(response.body).with_indifferent_access\r\n  end\r\n\r\n  private\r\n\r\n  def warden_scope(resource)\r\n    resource.class.name.underscore.to_sym\r\n  end\r\nend\r\n\r\nRSpec.configure do |config|\r\n  config.include RequestSpecHelper, type: :request\r\n  config.before(:each, type: :request) { host! \"my_app.test\" }\r\nend\r\n```\r\n\r\nThis file essentially tells Devise to put itself into test mode to handle login requests while we run our tests. It also gives us helpers for testing login and logout for users in tests.\r\n\r\n\r\n#### Generators\r\n\r\nWhen we use the rails genarator it tends to create files that most of the time we end up deleting.\r\nTo prevent that, let's tweak the `config/application.rb` file:  \r\n\r\nFirst remove the following lines:\r\n\r\n```ruby\r\n# Don't generate system test files.\r\nconfig.generators.system_tests = nil\r\n```\r\n\r\nThen\r\n\r\n```ruby\r\nconfig.generators do |g|\r\n  g.skip_routes true\r\n  g.helper false\r\n  g.assets false\r\n  g.test_framework :rspec, fixture: false\r\n  g.helper_specs false\r\n  g.controller_specs false\r\n  g.system_tests false\r\n  g.view_specs false\r\nend\r\n\r\n# GZip all responses\r\nconfig.middleware.use Rack::Deflater\r\n```\r\n\r\nThe last line zips the responses, which is useful if we don't use ngnix when we deploy our app.\r\n\r\n<span id=\"authentication\"></span>\r\n\r\n## Authentication: Devise\r\n\r\nIn our `Gemfile` add devise in the general section:\r\n\r\n```text\r\n# Flexible authentication solution for Rails with Warden (https://github.com/heartcombo/devise)\r\ngem \"devise\", \"~> 4.8\"\r\n```\r\n\r\nAnd in the development section of our `Gemfile` add:\r\n\r\n```text\r\ngroup :development do\r\n  # Preview mail in browser instead of sending. (https://github.com/ryanb/letter_opener)\r\n  gem \"letter_opener\", \"~> 1.8.1\"\r\nend\r\n```\r\n\r\nNow let's install those gems:\r\n\r\n```sh\r\n❯ bundle install\r\n```\r\n\r\n### Configure Devise\r\n\r\n\r\n#### Specify the layout we want to use for Devise\r\n\r\nOpen `config/application.rb` and add:\r\n\r\n```ruby\r\nconfig.to_prepare do\r\n  Devise::SessionsController.layout \"auth\"\r\n  # DeviseInvitable::RegistrationsController.layout \"auth\"\r\n  # Devise::InvitationsController.layout \"auth\"\r\n  Devise::RegistrationsController.layout \"auth\"\r\n  Devise::ConfirmationsController.layout \"auth\"\r\n  Devise::UnlocksController.layout \"auth\"\r\n  Devise::PasswordsController.layout \"auth\"\r\n  Devise::Mailer.layout \"mailer\"\r\nend\r\n```\r\n\r\n#### Routes related config for Devise\r\n\r\nOpen `app/controllers/application_controller.rb` and add the code below to protect all routes by default and allow some extra params:\r\n\r\n```ruby\r\nbefore_action :configure_permitted_parameters, if: :devise_controller?\r\nbefore_action :authenticate_user!\r\n\r\nprotected\r\n\r\ndef configure_permitted_parameters\r\n  devise_parameter_sanitizer.permit(:sign_up, keys: %i[first_name last_name terms_and_conditions])\r\n  devise_parameter_sanitizer.permit(:account_update, keys: %i[first_name last_name])\r\nend\r\n```\r\n\r\nHere we tell Devise to add `first_nam`, `last_name`, `terms_and_conditions` fields on the signup form otherwise Devise only asks for the `email` field.  \r\nWe also tell devise to protect all our pages, i.e requiring user to be authenticated in order to access the pages, thanks to this line of code:\r\n\r\n```ruby\r\nbefore_action :authenticate_user!\r\n```\r\n\r\nIf we want to override that for a specific page we replace it with:\r\n\r\n```ruby\r\nskip_before_action :authenticate_user!, only: [:show]\r\n```\r\n\r\nThe `, only: [:show]` part can be ommited if you have no action where you want to skip it.\r\n\r\n\r\n#### Generate devise & create first model\r\n\r\nWe installed the Devise gem, now lets run the generator for the necessary files to configure it:\r\n\r\n```text\r\n❯ rails generate devise:install\r\n      create  config/initializers/devise.rb\r\n      create  config/locales/devise.en.yml\r\n===============================================================================\r\n\r\n===============================================================================\r\n\r\nDepending on your application's configuration some manual setup may be required:\r\n\r\n  1. Ensure you have defined default url options in your environments files. Here\r\n     is an example of default_url_options appropriate for a development environment\r\n     in config/environments/development.rb:\r\n\r\n       config.action_mailer.default_url_options = { host: 'localhost', port: 3000 }\r\n\r\n     In production, :host should be set to the actual host of your application.\r\n\r\n     * Required for all applications. *\r\n\r\n  2. Ensure you have defined root_url to *something* in your config/routes.rb.\r\n     For example:\r\n\r\n       root to: \"home#index\"\r\n     \r\n     * Not required for API-only Applications *\r\n\r\n  3. Ensure you have flash messages in app/views/layouts/application.html.erb.\r\n     For example:\r\n\r\n       <p class=\"notice\"><%= notice %></p>\r\n       <p class=\"alert\"><%= alert %></p>\r\n\r\n     * Not required for API-only Applications *\r\n\r\n  4. You can copy Devise views (for customization) to your app by running:\r\n\r\n       rails g devise:views\r\n       \r\n     * Not required *\r\n\r\n===============================================================================\r\n...\r\n```\r\n\r\nWe are suggested to make 4 changes:\r\n* For the first one, add that line in `config/environments/development.rb`\r\n\r\n* For the second, let's create a page controller in `app/controllers/website/pages_controller.r` and add a methode for the homepage:\r\n\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nclass Website::PagesController < ApplicationController\r\n  layout \"website\"\r\n\r\n  skip_before_action :authenticate_user!\r\n\r\n  def homepage; end\r\nend\r\n```\r\n\r\nWe use a specific layout for this section\r\n\r\nUpdate `app/views/layouts/application.html.erb` with what is suggested in the 3rd recommandation.\r\n\r\nNow let's use the updated application layout to create the one we want to use with Devise:\r\n\r\n```sh\r\ncp app/views/layouts/application.html.erb app/views/layouts/auth.html.erb\r\n```\r\n\r\n\r\n```sh\r\n❯ rails generate devise User\r\n```", "publish": true, "created_at": "2023-01-25T18:09:36.908Z", "updated_at": "2023-01-25T18:09:36.908Z", "categories": [1, 6, 12, 11]}}, {"model": "blog.post", "pk": 3, "fields": {"author": 1, "title": "Docker Docker Docker", "slug": "docker-docker-docker", "intro": "What is docker? Why docker? How to create an image and host it?", "body": "## What is it? Why use it?\r\n\r\nDocker is language agnostic, whatever language you use to write your app it will run in a docker container.   \r\nThe container created by Docker provides a minimal environment for whatever you want to run without the \r\ninterference hosting system.\r\n\r\nWhat docker does is take your source code and build it into an image container.\r\n\r\nTo build the image you require a series of instructions, a set of steps for docker to follow on how the container image \r\nshould be.\r\n```\r\nContainer Image = App code + Dependencies + Docker instructions\r\n```\r\n\r\n**Note**: a container image is not a full-blown OS. It is not a full Linux distro, just a Linux construct. \r\nThe container uses the Kernel of the host it is running on.\r\n\r\n\r\n## Dockerfile\r\n\r\n`Dockerfile` is the document that lists the instructions to follow in order to build the container image.\r\n\r\nAs an example lets build a linux base NodeJS app. So, in the dockerfile you will have:\r\n```dockerfile\r\nFROM node:18.12.1-alpine3.15\r\n```\r\nIn a Dockerfile the first line is the FROM statement, it specifies what to use in order to build the image :\r\n* grab the specified NodeJS image version\r\n* use that image to have NodeJS tools installed \r\n* use that image to form the bottom layer of the container\r\n\r\n\r\nLet's have a look at the full dockerfile with comments explaining what each line/instruction does:\r\n```dockerfile\r\nFROM node:18.12.1-alpine3.15\r\n\r\nLABEL org.opencontainers.image.title=\"Workstation Docker Image\" \\\r\n      org.opencontainers.image.description=\"Web server showing host that responded\" \\\r\n      org.opencontainers.image.authors=\"@cloudcruder\"\r\n\r\n# Create directory in container image for app code\r\nRUN mkdir -p /usr/src/app\r\n\r\n# Copy app code (.) to /usr/src/app in container image\r\nCOPY . /usr/src/app\r\n\r\n# Set working directory context\r\nWORKDIR /usr/src/app\r\n\r\n# Install dependencies from packages.json\r\nRUN npm install\r\n\r\n# Command for container to execute, will be run each time the container is run  \r\nENTRYPOINT [ \"node\", \"server/app.js\" ]\r\n```\r\n\r\n`RUN mkdir -p /usr/src/app` tells docker to create a folder. The `-p` flag allows to create nested folders.\r\n\r\n`COPY . /usr/src/app` tells docker to copy everything on the same level as the `Dockerfile` into `/usr/src/app`.\r\n\r\n\r\n## Images\r\n\r\n\r\n### Build images\r\n\r\nThe command for building an image is `$ docker image build .`.\r\n\r\nYou can add a tag after the build command:  \r\n`$ docker image build -t your-docker-id/name-of-the-repo:name-of-the-image .`.  \r\nThe `name-of-the-image` part can be a version string if you really need to keep track of the version for each build.  \r\nThe `.` at the end indicates to Docker where all the files that it needs are.\r\n\r\n`$ docker image build -t cloudcruder/workstation:base-app .`\r\n\r\n\r\n### List images\r\n\r\nNow if you run `$ docker image list` or `$ docker image ls`\r\n```\r\n❯ docker image ls\r\nREPOSITORY        TAG               IMAGE ID       CREATED         SIZE\r\n<none>            <none>            e374d6058a3e   6 minutes ago   201MB\r\nsample-app        latest            aab3497ef956   3 days ago      112MB\r\n```\r\n\r\nThe first line is the result of running the command `$ docker image build .`.  \r\nTher is no repository name nor tag.\r\n```\r\nREPOSITORY        TAG               IMAGE ID       CREATED         SIZE\r\n<none>            <none>            e374d6058a3e   6 minutes ago   201MB\r\n```\r\n\r\nThe second line is the result of running the command `$ docker image build .`.  \r\nThere is a repository name and a tag.\r\n```\r\nREPOSITORY                TAG               IMAGE ID       CREATED          SIZE\r\ncloudcruder/workstation   base-app          e374d6058a3e   12 minutes ago   201MB\r\n```\r\n\r\n\r\n### Host images\r\n\r\nFirst make sure you have an account on [dockerhub](https://hub.docker.com/).  \r\nAlso make sure you are logged in the Docker desktop application otherwise the push will be denied.\r\n\r\nThen upload your image to \"your registry\":  \r\n`$ docker image push your-docker-id/name-of-the-repo:name-of-the-image`.  \r\nSo for me it would be:  \r\n`$ docker image push cloudcruder/workstation:base-app`", "publish": true, "created_at": "2023-01-25T18:12:25.271Z", "updated_at": "2023-01-25T18:12:25.271Z", "categories": [6, 13, 3, 14]}}, {"model": "blog.post", "pk": 4, "fields": {"author": 1, "title": "Getting certified - AWS Certified Cloud Practitioner", "slug": "getting-certified-aws-certified-cloud-practition", "intro": "Build foundational knowledge about Cloud Computing.\r\nLearn about AWS services and how they work together.", "body": "<div id=\"nav\">\r\n<ul>\r\n    <li><a href=\"#cloud-computing-fundamentals\">Cloud Computing fundamentals</a></li>\r\n    <li><a href=\"#technology-tools-and-services\">Technology tools and services</a></li>\r\n    <li><a href=\"#security-and-compliance\">Security and compliance</a></li>\r\n    <li><a href=\"#billing-pricing\">Billing and pricing</a></li>\r\n</ul>\r\n</div>\r\n\r\n\r\n<span id=\"cloud-computing-fundamentals\"></span>\r\n# Cloud Computing fundamentals\r\n\r\n\r\n## What is Cloud Computing?\r\n\r\n**Cloud Computing** is the on-demand delivery of compute power, database storage, applications, and \r\nother IT resources through a cloud services platform via the internet with pay-as-you-go-pricing thanks to data-centers \r\nthat cloud computing providers manage.\r\n\r\nExamples of Cloud Computing providers: **AWS**, **Google Cloud Computing**, **Azure**.\r\n\r\nExamples of services provided by AWS per categories:\r\n* Compute: AWS EC2, Lambda\r\n* Networking: VPC, Direct Connect\r\n* Storage: S3, EBS\r\n* Analytics: Athena, Redshift\r\n* Development: Cloud9, CodeCommit\r\n* Security: IAM, Macie\r\n* Databases: RDS, DynamoDB\r\n\r\n\r\n## Cloud Computing Models\r\n\r\n\r\n## Cloud deployment Models\r\n\r\n**Servers**\r\n\r\n<p><a href=\"#nav\">Back to the top</a></p>\r\n\r\n<span id=\"technology-tools-and-services\"></span>\r\n# Technology tools and services\r\n\r\n\r\n<p><a href=\"#nav\">Back to the top</a></p>\r\n\r\n<span id=\"security-and-compliance\"></span>\r\n# Security and compliance\r\n\r\n\r\n<p><a href=\"#nav\">Back to the top</a></p>\r\n\r\n<span id=\"billing-pricing\"></span>\r\n# Billing and pricing\r\n\r\n<p><a href=\"#nav\">Back to the top</a></p>\r\n\r\n\r\n# References\r\n\r\n[Overview of Amazon Web Services - \r\nAWS Whitepaper](https://docs.aws.amazon.com/pdfs/whitepapers/latest/aws-overview/aws-overview.pdf#introduction) (❗️Read once and read again juste before the exam.)", "publish": false, "created_at": "2023-01-25T18:14:36.328Z", "updated_at": "2023-01-25T18:14:36.328Z", "categories": [15, 4, 3]}}, {"model": "accounts.customuser", "pk": 1, "fields": {"password": "pbkdf2_sha256$390000$zvzd2sujlASvYNCLFH9TLp$OQ5Cu+Aao0ilBh0mFvtxue3d7pbfmfQz//qHalRtKMI=", "last_login": "2023-01-25T18:10:47.744Z", "is_superuser": true, "username": "jsmith", "first_name": "", "last_name": "", "email": "jsmith@cloudcruder.com", "is_staff": true, "is_active": true, "date_joined": "2023-01-25T18:00:33.086Z", "age": null, "groups": [], "user_permissions": []}}]